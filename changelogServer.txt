Maven
	export PATH=/mnt-system/local/apache-maven-3.3.9/bin:$PATH
	export PATH=/home/carper/local/apache-maven-3.3.9/bin:$PATH
	export JAVA_HOME=/home/knoppix/local/jdk1.8.0_131
	mvn jetty:run

	http://localhost:8080/server/rest/inspeccion/add

	{
		"id": "1",
	    "contenedor": "ABC001",
	    "tamano": "T1",
	    "chasis": "C01",
	    "placa": "P01",
	    "cliente": "Cliente 1",
	    "fecha": "2017-11-03",
	    "agencia": "A01",
	    "vapor": "V01",
	    "destino": "Manta",
	    "factura": "F01",
	    "pta_izq": "1",
	    "pta_der": "1",
	    "pfi_izq": "1",
	    "pfi_der": "1",
	    "ur_izq": "01",
	    "ur_der": "01",
	    "le_izq": "01",
	    "le_der": "01",
	    "li_izq": "01",
	    "li_der": "01",
	    "techo": "01",
	    "piso": "01",
	    "est_inf": "01",
	    "est_int": "01",
	    "chasis_estado": "01",
	    "observaciones": "Prueba",
	    "inspector": "Carlos Pérez"
	}
	
	http://localhost:8080/server/rest/inspeccion/list/contenedor/AW

{root=[{id=215, contenedor=SAWC2693791, cliente=MILLI MCELRATH, fecha=2017/02/13}, {id=273, contenedor=JAWS2845915, cliente=TITOS LANDMAN, fecha=2017/05/27}, {id=391, contenedor=AWHQ7862865, cliente=ELGA GREVE, fecha=2017/03/26}, {id=549, contenedor=HRAW4651291, cliente=OPHELIA SOUNESS, fecha=2017/08/05}, {id=654, contenedor=NIAW6728722, cliente=FRANNY ENRIC, fecha=2017/10/06}, {id=874, contenedor=LGAW7740451, cliente=WOLFIE MCRUVIE, fecha=2017/07/18}, {id=884, contenedor=AWZV1292407, cliente=NANETE IGONET, fecha=2017/03/02}]}
	
	http://localhost:8080/server/rest/inspeccion/get/1001

PostgreSQL
	* scripts:

		# sudo vim /etc/postgresql/9.6/main/pg_hba.conf 
			#local   all             all                                     peer
			local   all             sgs md5 
		# $udo /etc/init.d/postgresql restart

		+ En el servidor:
		#local   all             all                                     peer
		#2017-11-28 modificado por carper 
		local   all             all                                     md5

		# su postgres
		# psql
		
		CREATE USER sgs WITH PASSWORD 'sgs';
		CREATE DATABASE container OWNER sgs;
		\q

		# psql -U sgs container < /home/carper/local/projects/sgs/server/src/main/resources/sql/create.sql
		# psql -U sgs container < /home/knoppix/proyectos/sgs/server/src/main/resources/sql/create.sql
		# psql -U sgs container < ./create.sql
		# psql91 -U sgs container < /Users/carper/local/projects/sgs/server/src/main/resources/sql/create.sql

		# psql -d container -U sgs

		+ Foreign keys:
			https://stackoverflow.com/questions/28558920/postgresql-foreign-key-syntax

	* Validación:
		https://www.codenameone.com/blog/validation-regex-masking.html
		
	* JSON WS:
		https://groups.google.com/forum/#!topic/codenameone-discussions/tGPeQrNRO58
		https://stackoverflow.com/questions/38427137/how-to-make-json-put-request-through-codename-one-api
		https://stackoverflow.com/questions/39063909/how-to-post-json-to-a-rest-webservice-in-codenameone
		https://www.codenameone.com/how-do-i---connect-to-a-web-service.html
		http://sjhannah.com/blog/2013/01/24/4-ways-to-consume-json-web-services-in-codename-one/
		http://www.amalhichri.net/codename-one-connecting-to-mysql-database-and-perfoming-basic-cruds/

	* servidor:
		http://www.javasavvy.com/rest-jersey-maven-json-tutorial/
		http://www.vogella.com/tutorials/REST/article.html
		https://www.mkyong.com/webservices/jax-rs/json-example-with-jersey-jackson/
		http://www.java4s.com/web-services/restful-web-service-jax-rs-json-example-using-jersey/

	* Postgres:
		https://www.mkyong.com/jdbc/jdbc-transaction-example/

	* test:
		http://www.hascode.com/2011/09/rest-assured-vs-jersey-test-framework-testing-your-restful-web-services/
		https://stackoverflow.com/questions/21413738/unit-testing-jersey-restful-services

		mvn -Dtest=TestApp1 test
		mvn -Dtest=TestCircle#xyz test
		
		mvn test -Dtest=ec.cjpq.server.rest.dao.InspeccionDaoTest
		mvn test -Dtest=ec.cjpq.server.rest.util.ConfiguracionTest
		mvn test -Dtest=ec.cjpq.server.rest.model.entity.AppTest

	* logger:
		https://www.mkyong.com/logging/log4j-hello-world-example/

	* cn1:
		+ Consulta, listas y botones:
		https://www.codenameone.com/how-do-i---create-a-list-of-items-the-easy-way.html
		
		+ Recorrer JSON en Lista	
		https://gist.github.com/codenameone/f9fdacaac12583cd2eed

		+ Action listener:
		https://groups.google.com/forum/#!topic/codenameone-discussions/JjbjuBmB640

		+ Tablas:
		https://www.codenameone.com/blog/understanding-the-table-component.html
		https://www.codenameone.com/blog/tip-select-table-row.html

	* tomcat:
		ln -s /home/carper/local/projects/sgs/server/target/server /home/carper/local/tomcat/webapps
